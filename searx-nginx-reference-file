# From https://gist.github.com/plentz/6737338
# redirect all http traffic to https
server {
#    if ($host = www.your-website-url-here) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot

#    if ($host = your-website-url-here) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot

  server_name insert-your-domain-here.com www.insert-your-domain-here.com;
  return 301 https://$host$request_uri;
}


server {
#  listen 443 ssl http2;
#  listen [::]:443 ssl http2;

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
#  ssl_session_cache shared:SSL:50m;
#  ssl_session_timeout 1d;
#  ssl_session_tickets off;

  # enables server-side protection from BEAST attacks
  # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
#  ssl_prefer_server_ciphers on;
#  ssl_protocols TLSv1.2 TLSv1.3;

  # ciphers chosen for forward secrecy and compatibility
  # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
#  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

  # ssl stapling options removed

#  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

  # ... the rest of your configuration
  # https://example.org/ # modified from Searx instructions
  # Searx site instructions include "location /searx/" and "location /searx/static/ for the next 2 blocks

  location / {
      proxy_pass         http://127.0.0.1:4004/;

      proxy_set_header   Host             $host;
      proxy_set_header   Connection       $http_connection;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   X-Scheme         $scheme;
      proxy_set_header   X-Script-Name    /searx;
  }

  location /static/ {
      alias /usr/local/searx/searx-src/searx/static/;
  }
  # https://example.org/morty

  location /morty {
      proxy_pass         http://127.0.0.1:3000/;

      proxy_set_header   Host             $host;
      proxy_set_header   Connection       $http_connection;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   X-Scheme         $scheme;
  }
}
